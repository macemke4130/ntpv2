section[aria-label="Images"] {
  display: flex;
  justify-content: space-between;

  [data-quiz-image] {
    width: 50%;
    height: auto;
    aspect-ratio: 4 / 3;
    background: #c6c6c6;

    transition-property: filter;
    transition-duration: 100ms;
    transition-timing-function: linear;
  }

  [data-blur="true"] {
    filter: blur(20px);
  }

  [data-blur="false"] {
    filter: blur(0);
  }
}

section[aria-label="Answers"] {
  max-width: 40rem;
  margin: 0 auto;
  padding: 0 0.5rem;

  [data-quiz-button] {
    display: grid;
    place-items: center;
    width: 100%;
    height: 3rem;
    font-size: 1.25rem;
    margin-bottom: 1.5rem;
    border: var(--btn-border);
    padding: 0.5rem;
    border-radius: 0.25rem;
    cursor: pointer;

    transition-property: transform background-color;
    transition-timing-function: linear;
    transition-duration: 250ms;
  }
}

[data-boom="true"] {
  background-color: rgb(181, 0, 0);
}

[data-boom="true"]:nth-child(odd) {
  transform: rotate(25deg) translate(10%, 50%);
}

[data-boom="true"]:nth-child(even) {
  transform: rotate(-25deg) translate(-20%, -70%);
}

[data-game-curtain="down"] {
  display: none;
}

[data-screen-active="false"] {
  display: none;
}

#preload {
  display: block;
  width: 0;
  height: 0;
  position: absolute;
  overflow: hidden;
  z-index: 2;
}

section[aria-label="Score"] {
  display: flex;
  justify-content: space-between;
  padding: 1rem;

  div {
    text-align: center;
  }
}

table {
  width: 100%;

  tbody tr:nth-child(odd) {
    background: var(--btn-color);
  }

  th {
    width: 23.75%;
  }

  th:first-of-type {
    width: 5%;
  }

  td {
    text-align: center;
    padding: 0.5rem 0.25rem;
  }
}

#scoreboard {
  margin-top: 1rem;
}

#scoreboard:has(tbody[data-active="false"]) {
  display: none;
}

#player-name {
  width: 40rem;

  #player-title {
    text-align: center;
    padding-bottom: 0.5rem;
    font-size: 1.5rem;
  }

  label {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;

    input {
      text-align: center;
      font-size: 1.25rem;
      width: 80%;
      margin-top: 0.25rem;
    }
  }

  #player-name-buttons {
    display: flex;
    gap: 1rem;
    padding-top: 1rem;

    button {
      background: var(--btn-color);
      color: var(--text-color);
      border: var(--btn-border);
      padding: 0.5rem 0.75rem;
      border-radius: 0.5rem;
      margin: 0 0.5rem;
    }
  }
}

#game-over-title {
  font-size: 2.5rem;
  margin-bottom: 0.25rem;
  text-align: center;
}

#final-score-title {
  font-size: 1.15rem;
  text-align: center;
}

#final-score {
  font-size: 3.5rem;
  text-align: center;
}

#correct {
  text-align: center;
}

#fun-score {
  text-align: center;
  margin-bottom: 1rem;
}

#scoreboard-offset {
  font-size: 1.25rem;
  text-align: center;
  margin-top: 0.5rem;
  line-height: 1.5;
}

#play-again {
  display: block;
  margin: 1rem auto;
  font-size: 1.5rem;
  width: fit-content;
  padding: 1rem 1.5rem;
  text-decoration: none;
  border-radius: 0.5rem;
  border: var(--btn-border);
  background: var(--btn-color);
  cursor: pointer;
}

#countdown-to-start {
  position: fixed;
  z-index: 2;
  inset: 0;
  background: var(--btn-color);
  display: grid;
  place-items: center;
}

#countdown-container {
  display: grid;
  place-items: center;
  width: 20rem;
  height: 20rem;
  border: var(--btn-border);
  border-radius: 100%;

  transition-property: background-color;
  transition-duration: 250ms;
}

/* attr() as value besides content is still experimental.
Using :has() selector to avoid another querySelector() for #countdown-seconds. */
#countdown-container:has(#countdown-seconds[data-color="red"]) {
  background-color: rgb(181, 0, 0);
}

#countdown-container:has(#countdown-seconds[data-color="yellow"]) {
  background-color: rgb(216, 216, 0);
}

#countdown-container:has(#countdown-seconds[data-color="green"]) {
  background-color: green;
}

#countdown-seconds[data-color="yellow"] {
  color: black;
}

#countdown-seconds[data-color="green"],
#countdown-seconds[data-color="red"] {
  text-shadow: 2px 2px 5px black;
}

#countdown-seconds {
  font-weight: bold;
  font-size: 10rem;
}

[data-blur="true"] {
  filter: blur(5px);
}

.reward {
  position: relative;
}

.reward::after {
  content: "";
  display: block;
  position: absolute;
  inset: 0;
  width: 100%;
  height: 100%;
  z-index: 2;
  background: linear-gradient(90deg, red 0%, purple 14.3%, yellow 28.6%, green 42.9%, blue 57.2%, indigo 71.5%, pink 85.8%, orange 100%);
  /* background: linear-gradient(
    90deg,
    rgba(255, 0, 0, 1) 0%,
    rgba(255, 165, 0, 1) 14.3%,
    rgba(255, 255, 0, 1) 28.6%,
    rgba(0, 255, 0, 1) 42.9%,
    rgba(0, 0, 255, 1) 57.2%,
    rgba(75, 0, 130, 1) 71.5%,
    rgba(75, 0, 130, 1) 85.8%,
    rgba(60, 41, 154, 1) 100%
  ); */

  animation-name: reward-fade-out;
  animation-duration: 250ms;
  animation-timing-function: linear;
  animation-fill-mode: forwards;
  animation-direction: normal;
}

@keyframes reward-fade-out {
  0% {
    opacity: 100%;
  }

  100% {
    opacity: 0%;
  }
}

#hint {
  display: flex;
  align-items: flex-end;
  justify-content: center;
  text-align: center;
  height: 2.5rem;
  font-weight: bold;
  padding: 0.25rem;
}

.glow {
  position: relative;
}

.glow::after {
  content: "";
  position: absolute;
  inset: 0;
  z-index: 0;
  box-shadow: rgba(202 72 140 / 80%) 0 0 10px 7px;

  animation-name: pulse;
  animation-duration: 500ms;
  animation-iteration-count: infinite;
  animation-direction: alternate-reverse;
  animation-timing-function: linear;
}

@keyframes pulse {
  0% {
    opacity: 100%;
  }

  100% {
    opacity: 0%;
  }
}
